#!/usr/bin/env elf
rows: "day6.txt" lines,
h: rows len,
w: rows _0 len,
at: {x,y| ((y >= 0) and (y < h) and (x >= 0) and (x < w)) if({rows nth(y) nth(x)})},
find: {what| 0 to(h dec) some({y| 0 to(w dec) some({x| (at call(x,y) = what) if([x,y])})})},
start: find call(@^),
# walk in dir 0=north,1=east,2=south,3=west
dirs: %{0: [0,-1], 1: [1,0], 2: [0,1], 3: [-1,0]},
fwd: {p,d| dir: dirs at(d), [p _0 + dir _0, p _1 + dir _1]},
turn: {d| d1: d + 1, (d1 > 3) if(0, d1)},
# part1 walk straight until hitting something, then turn right, count positions
positions: %{} ref,
positions swap({$ put([start,0], 0)}),
p: start ref,
dir: 0 ref,
step: 0 ref,
done: false ref,
loops: 0 ref,
{ done val not } while({
  np: fwd call(p val, dir val),
  m: at call(np _0, np _1),
  (m = nil) if(
   { done val(true) },
   {((m = @.) or (m = @^)) if(
     {# check if this were an obstruction, would it cause us to visit
      # existing in the same direction
      ( ((m = @^) not) and (positions val at([np, turn call(dir val)])) ) if({loops swap(&inc)}),
      p val(np), s: step swap(&inc), positions swap({$ put([np, dir val], s)})},
     {dir swap(turn)})
   })
}),
"Part1: %d" fmt(positions val keys map(&_0) sortu len) print
